require constants.mj
require arithmetics.mj
require utils.mj
require transfer.mj
require branching.mj

main() = (regsOut[16-31]:[word], So:[word], PCo:[word+word], SPo:[word+word], o:[word], s2) where
  PC = reg_n<word+word>(PCo);
  SP = reg_n<word+word>(SPo);
  S = reg_n<word>(So);

  opcode = rom<instr_addr_size, instr_size>(PC);
  (op[0-15]) = op_decomposer(opcode);

  (regsi[16-31], Si, PCi, SPi) = cpi(0.0.0.0, 0.0.1.1.1.1.0.0,
                                     0.0.0.1.1.1.1.0, regs[17-31], S, PC, SP);
  (regsOut[16-31], So, PCo, SPo) = brmi(0.0.1.0.0.0.1, regsi[16-31], Si, PCi, SPi);
  (o, c) = nsubber<word>(0.0.0.1.1.1.1.0, 0.0.1.1.1.1.0.0, 0);
  s2 = Si[2];
  (regs[16-31]) = store_registers(regsOut[16-31]);
end where

