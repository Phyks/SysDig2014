require constants.mj
# require transfer.mj
require utils.mj
# require flags.mj

main() =  (PC:[16], opcode:[16]) where #(regsOut[16-31]:[word], So:[word], PCo:[word+word], SPo:[word+word]) where

(*  regs16 = 0.0.0.0.0.0.0.1 ;
  regs17 = 0.0.0.0.0.0.1.0 ;
  regs18 = 0.0.0.0.0.0.1.1 ;
  regs19 = 0.0.0.0.0.1.0.0 ;
  regs20 = 0.0.0.0.0.1.0.1 ;
  regs21 = 0.0.0.0.0.1.1.0 ;
  regs22 = 0.0.0.0.0.1.1.1 ;
  regs23 = 0.0.0.0.1.0.0.0 ;
  regs24 = 0.0.0.0.1.0.0.1 ;
  regs25 = 0.0.0.0.1.0.1.0 ;
  regs26 = 0.0.0.0.1.0.1.1 ;
  regs27 = 0.0.0.0.1.1.0.0 ;
  regs28 = 0.0.0.0.1.1.0.1 ;
  regs29 = 0.0.0.0.1.1.1.0 ;
  regs30 = 0.0.0.0.1.1.1.1 ;
  regs31 = 0.0.0.1.0.0.0.0 ;
  PC = 0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0;
  SP = 0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0;
  S = 1.0.0.0.0.0.0.0;
  aone = allone<word>();
  azero = zero<word>();
  (regsOut[16-31], So, PCo, SPo) = ld(0.0.0.0.0, 0,0,0,0,
  regs[16-31], S, PC, SP); 
  *)
  PC = PCin;
  opcode = rom<instr_addr_size, instr_size>(PC);
  PCin = reg_n<word+word>(increase<word+word>(PC));

  
end where

