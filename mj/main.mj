require constants.mj
require arithmetics.mj
require bitwise.mj
require branching.mj
require gates.mj
require others.mj
require transfer.mj

route00010(o[0-10], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = cpse(o9.o3.o2.o1.o0, o8.o7.o6.o5.o4, regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = cp(o9.o3.o2.o1.o0, o8.o7.o6.o5.o4, regs[16-31], S, PC, SP);
    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o10);
end where

route00011(o[0-10], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = sub(o9.o3.o2.o1.o0, o8.o7.o6.o5.o4, regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = adc(o9.o3.o2.o1.o0, o8.o7.o6.o5.o4, regs[16-31], S, PC, SP);
    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o10);
end where

route0011(o[0-11], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
  (regs[16-31], S, PC, SP) = cpi(o11.o10.o9.o8.o3.o2.o1.o0, o7.o6.o5.o4, regs[16-31], S, PC, SP);
end where

route00100(o[0-10], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = and_op(o9.o3.o2.o1.o0, o8.o7.o6.o5.o4, regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = eor(o9.o3.o2.o1.o0, o8.o7.o6.o5.o4, regs[16-31], S, PC, SP);
    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o10);
end where

route00001(o[0-10], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = sbc(o9.o3.o2.o1.o0, o8.o7.o6.o5.o4, regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = add(o9.o3.o2.o1.o0, o8.o7.o6.o5.o4, regs[16-31], S, PC, SP);
    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o10);
end where

route00000(o[0-10], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = nop(regs[16-31], S, PC, SP);
    # (regs[16-31]) = regs_identity(regs[16-31]);
    # S = S;
    # PC = PC; SP = SP;

    (regs2[16-31], S2, PC2, SP2) = cpc(o9.o3.o2.o1.o0, o8.o7.o6.o5.o4, regs[16-31], S, PC, SP); # TODO

    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o10);
end where

route00101(o[0-10], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = or_op(o9.o3.o2.o1.o0, o8.o7.o6.o5.o4, regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = mov(o9.o3.o2.o1.o0, o8.o7.o6.o5.o4, regs[16-31], S, PC, SP);
    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o10);
end where

route0001(o[0-11], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route00010(o[0-10], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route00011(o[0-10], regs[16-31], S, PC, SP);
    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o11);
end where

route0010(o[0-11], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route00100(o[0-10], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route00101(o[0-10], regs[16-31], S, PC, SP);
    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o11);
end where

route0000(o[0-11], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route00000(o[0-10], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route00001(o[0-10], regs[16-31], S, PC, SP);
    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o11);
end where

route0101(o[0-11], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
  (regs[16-31], S, PC, SP) = subi(o11.o10.o9.o8.o3.o2.o1.o0, o7.o6.o5.o4, regs[16-31], S, PC, SP);
end where

route0100(o[0-11], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
  (regs[16-31], S, PC, SP) = sbci(o11.o10.o9.o8.o3.o2.o1.o0, o7.o6.o5.o4, regs[16-31], S, PC, SP);
end where

route0111(o[0-11], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
  (regs[16-31], S, PC, SP) = andi(o11.o10.o9.o8.o3.o2.o1.o0, o7.o6.o5.o4, regs[16-31], S, PC, SP);
end where

route0110(o[0-11], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
  (regs[16-31], S, PC, SP) = sbr(o11.o10.o9.o8.o3.o2.o1.o0, o7.o6.o5.o4, regs[16-31], S, PC, SP);
end where

route001(o[0-12], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route0010(o[0-11], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route0011(o[0-11], regs[16-31], S, PC, SP);
    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o12);
end where

route000(o[0-12], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route0000(o[0-11], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route0001(o[0-11], regs[16-31], S, PC, SP);
    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o12);
end where

route010(o[0-12], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route0100(o[0-11], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route0101(o[0-11], regs[16-31], S, PC, SP);
    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o12);
end where

route011(o[0-12], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route0110(o[0-11], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route0111(o[0-11], regs[16-31], S, PC, SP);
    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o12);
end where

route00(o[0-13], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route000(o[0-12], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route001(o[0-12], regs[16-31], S, PC, SP);

    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o13);
end where

route01(o[0-13], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route010(o[0-12], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route011(o[0-12], regs[16-31], S, PC, SP);
    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o13);
end where

route0(o[1-15], regs[16-31], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route00(o[2-15], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route01(o[2-15], regs[16-31], S, PC, SP);
    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o13);
end where

route111100(o[0-9], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
  if o0 = 0 then
    if o1 = 0 then
      if o0 = 0 then # 000
        (regs[16-31], S, PC, SP) = brlo(o9.o8.o7.o6.o5.o4.o3, regs[16-31], S, PC, SP)
      else # 001
        (regs[16-31], S, PC, SP) = breq(o9.o8.o7.o6.o5.o4.o3, regs[16-31], S, PC, SP)
      end if
    else
      if o0 = 0 then # 010
        (regs[16-31], S, PC, SP) = brmi(o9.o8.o7.o6.o5.o4.o3, regs[16-31], S, PC, SP)
      else # 011
        (regs[16-31], S, PC, SP) = brvs(o9.o8.o7.o6.o5.o4.o3, regs[16-31], S, PC, SP)
      end if
    end if
  else
    if o1 = 0 then
      if o0 = 0 then # 100
        (regs[16-31], S, PC, SP) = brlt(o9.o8.o7.o6.o5.o4.o3, regs[16-31], S, PC, SP)
      else # 101
        (regs[16-31], S, PC, SP) = brhs(o9.o8.o7.o6.o5.o4.o3, regs[16-31], S, PC, SP)
      end if
    else
      if o0 = 0 then # 110
        (regs[16-31], S, PC, SP) = brts(o9.o8.o7.o6.o5.o4.o3, regs[16-31], S, PC, SP)
      else # 111
        (regs[16-31], S, PC, SP) = nop(regs[16-31], S, PC, SP) # No opcode associated
      end if
    end if
  end if
end where

route111110(o[0-9], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = bld(o8.o7.o6.o5.o4, o2.o1.o0, regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = bst(o8.o7.o6.o5.o4, o2.o1.o0, regs[16-31], S, PC, SP);

    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o9);
end where

route111101(o[0-9], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
  if o2 = 0 then
    if o1 = 0 then
      if o0 = 0 then # 000
        (regs[16-31], S, PC, SP) = brsh(o9.o8.o7.o6.o5.o4.o3, regs[16-31], S, PC, SP)
      else # 001
        (regs[16-31], S, PC, SP) = brne(o9.o8.o7.o6.o5.o4.o3, regs[16-31], S, PC, SP)
      end if
    else
      if o0 = 0 then # 010
        (regs[16-31], S, PC, SP) = brpl(o9.o8.o7.o6.o5.o4.o3, regs[16-31], S, PC, SP)
      else # 011
        (regs[16-31], S, PC, SP) = brie(o9.o8.o7.o6.o5.o4.o3, regs[16-31], S, PC, SP)
      end if
    end if
  else
    if o1 = 0 then
      if o0 = 0 then # 100
        (regs[16-31], S, PC, SP) = brge(o9.o8.o7.o6.o5.o4.o3, regs[16-31], S, PC, SP)
      else # 101
        (regs[16-31], S, PC, SP) = brhc(o9.o8.o7.o6.o5.o4.o3, regs[16-31], S, PC, SP)
      end if
    else
      if o0 = 0 then # 110
        (regs[16-31], S, PC, SP) = brtc(o9.o8.o7.o6.o5.o4.o3, regs[16-31], S, PC, SP)
      else # 111
        (regs[16-31], S, PC, SP) = brid(o9.o8.o7.o6.o5.o4.o3, regs[16-31], S, PC, SP)
      end if
    end if
  end if
end where

route11111(o[0-10], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route111110(o[0-9], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = sbrs(o8.o7.o6.o5.o4, o2.o1.o0, regs[16-31], S, PC, SP);

    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o10);
end where

route11110(o[0-10], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route111100(o[0-9], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route111101(o[0-9], regs[16-31], S, PC, SP);

    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o10);
end where

route1111(o[0-11], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route11110(o[0-10], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route11111(o[0-10], regs[16-31], S, PC, SP);

    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o11);
end where

route1001(o[0-11], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
  # (regs[16-31], S, PC, SP) = ld(o8.o7.o6.o5.o4, o3.o2.o1.o0, regs[16-31], S, PC, SP)
  (regs[16-31], S, PC, SP) = nop(regs[16-31], S, PC, SP); # TODO : This should be ld
end where

route1000(o[0-11], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    # (regs[16-31], S, PC, SP) = ld(o8.o7.o6.o5.o4, o3.o2.o1.o0, regs[16-31], S, PC, SP)
    (regs1[16-31], S1, PC1, SP1) = nop(regs[16-31], S, PC, SP); # TODO : This should be ld

    # (regs[16-31], S, PC, SP) = st(o8.o7.o6.o5.o4, o3.o2.o1.o0, regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = nop(regs[16-31], S, PC, SP); # TODO : This should be ld

    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o9)
end where

route1010(o[0-11], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = lds(o10.o9.o8.o3.o2.o1.o0, o7.o6.o5.o4, regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = sts(o10.o9.o8.o3.o2.o1.o0, o7.o6.o5.o4, regs[16-31], S, PC, SP);
    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o11);
end where

route1011(o[0-11], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    # (regs[16-31], S, PC, SP) = in(o10.o9.o3.o2.o1.o0, o8.o7.o6.o5.o4, regs[16-31], S, PC, SP)
    (regs1[16-31], S1, PC1, SP1) = nop(regs[16-31], S, PC, SP); # TODO : This should be in

    # (regs[16-31], S, PC, SP) = out(o10.o9.o3.o2.o1.o0, o8.o7.o6.o5.o4, regs[16-31], S, PC, SP)
    (regs2[16-31], S2, PC2, SP2) = nop(regs[16-31], S, PC, SP); # TODO : This should be out

    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o11)
end where

route1110(o[0-11], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
  # (regs[16-31], S, PC, SP) = ldi(o11.o10.o9.o8.o3.o2.o1.o0, o7.o6.o5.o4, regs[16-31], S, PC, SP)
  (regs[16-31], S, PC, SP) = nop(regs[16-31], S, PC, SP); # TODO : This should be ldi
end where

route1101(o[0-11], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
  (regs[16-31], S, PC, SP) = rcall(o11.o10.o9.o8.o7.o6.o5.o4.o3.o2.o1.o0, regs[16-31], S, PC, SP);
end where

route1100(o[0-11], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
  (regs[16-31], S, PC, SP) = rjmp(o11.o10.o9.o8.o7.o6.o5.o4.o3.o2.o1.o0, regs[16-31], S, PC, SP);
end where

route101(o[0-12], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route1010(o[0-11], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route1011(o[0-11], regs[16-31], S, PC, SP);

    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o12);
end where

route100(o[0-12], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route1000(o[0-11], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route1001(o[0-11], regs[16-31], S, PC, SP);

    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o12);
end where

route110(o[0-12], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route1100(o[0-11], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route1101(o[0-11], regs[16-31], S, PC, SP);

    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o12);
end where

route111(o[0-12], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route1110(o[0-11], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route1111(o[0-11], regs[16-31], S, PC, SP);

    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o12);
end where

route11(o[0-13], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route110(o[0-12], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route111(o[0-12], regs[16-31], S, PC, SP);

    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o12);
end where

route10(o[0-13], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route100(o[0-12], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route101(o[0-12], regs[16-31], S, PC, SP);

    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o13);
end where

route1(o[0-14], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route10(o[0-13], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route11(o[0-13], regs[16-31], S, PC, SP);

    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o14);
end where


route(o[0-15], regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
    (regs1[16-31], S1, PC1, SP1) = route0(o[0-14], regs[16-31], S, PC, SP);
    (regs2[16-31], S2, PC2, SP2) = route1(o[0-14], regs[16-31], S, PC, SP);

    (regs[16-31], S, PC, SP) = muxer(regs1[16-31], S1, PC1, SP1, regs2[16-31], S2, PC2, SP2, o15);
end where

mainLoop(regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], SP:[word+word]) where
  # Get the opcode of the instruction
  opcode = rom<instr_addr_size, instr_size>(PC);
  (op[0-15]) = op_decomposer(opcode);

  # Route it to the instruction
  (regs[16-31], S, PC, SP) = route00000(op[0-10], regs[16-31], S, PC, SP);

  # Loop
  (regs[16-31], S, PC, SP) = mainLoop(regs[16-31], S, PC, SP);
end where

main() = () where
  # Initialize everything to zero, except SP which is RAMEND
  RAMEND = zero<7>().1.zero<8>(); #RAMEND = 512
  z = 0;
  (regs[16-31], S, PC, SP) = init_register(z, RAMEND);

  (regs[16-31], S, PC, SP) = mainLoop(regs[16-31], S, PC, SP);
end where
