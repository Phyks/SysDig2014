rjmp(k:[12], regs[16-31]:[word], S:[word], PC:[word+word], STACK:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], STACK:[word+word], SP:[word+word]) where
  (PC, c) = adder<word+word>(PC, 0.0.0.0.k, 1)
end where

ijmp(regs[16-31]:[word], S:[word], PC:[word+word], STACK:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], STACK:[word+word], SP:[word+word]) where
  Z = regs31.regs30;

  (PC, c) = adder<word+word>(PC, Z, 0)	
end where

rcall(k:[12], regs[16-31]:[word], S:[word], PC:[word+word], STACK:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], STACK:[word+word], SP:[word+word]) where

  o = one<word+word>();
  two = one<word+word-1>().0;
  (PC, c) = adder<word+word>(PC, 0.0.0.0.k, 1); # PC ← PC+k+1
  (STACK, c) = adder<word+word>(PC, o, 0);	# STACK ← PC+1
  (SP, c) = subtracter<word+word>(SP, two); # SP ← SP-2
  
end where

icall(regs[16-31]:[word], S:[word], PC:[word+word], STACK:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], STACK:[word+word], SP:[word+word]) where
  zero = zero<word+word>();
  two = one<word+word-1>().0;
  
  PC = regs31.regs30;
  (STACK, c) = adder<word+word>(PC, zero, 1);
  (SP, c) = subtracter<word+word>(SP, two):
end where

ret(regs[16-31]:[word], S:[word], PC:[word+word], STACK:[word+word], SP:[word+word]) = (regs[16-31]:[word], S:[word], PC:[word+word], STACK:[word+word], SP:[word+word]) where
  two = one<word+word-1>().0;
  PC = STACK
  (SP, c) = adder<word+word>(SP, two, 0); 
end where

reti() = () where
  two = one<word+word-1>().0;
  PC = STACK
  (SP, c) = adder<word+word>(SP, two, 0);

  S = setStatus(1, S[1-7], S)
end where

cpse() = () where # TODO
end where

cp() = () where # TODO
end where

cpc() = () where # TODO
end where

cpi() = () where # TODO
end where

sbrc() = () where # TODO
end where

sbrs() = () where # TODO
end where

sbic() = () where # TODO
end where

sbis() = () where # TODO
end where

brbs() = () where # TODO
end where

brbc() = () where # TODO
end where

breq() = () where # TODO
end where

brne() = () where # TODO
end where

brcs() = () where # TODO
end where

brcc() = () where # TODO
end where

brsh() = () where # TODO
end where

brlo() = () where # TODO
end where

brmi() = () where # TODO
end where

brpl() = () where # TODO
end where

brge() = () where # TODO
end where

brlt() = () where # TODO
end where

brhs() = () where # TODO
end where

brhc() = () where # TODO
end where

brts() = () where # TODO
end where

brtc() = () where # TODO
end where

brvs() = () where # TODO
end where

brvc() = () where # TODO
end where

brie() = () where # TODO
end where

brid() = () where # TODO
end where
