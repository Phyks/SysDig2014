not_n<n>(a:[n]) = (b:[n]) where
  if n = 0 then
    b = []
  else
    b = (not a[0]).not_n<n-1>(a[1..]);
  end if
end where

fulladder(a,b,c) = (s, r) where
    s = (a xor b) xor c;
    r = (a and b) + ((a xor b) and c) ;
end where

adder<n>(a:[n], b:[n], c_in) = (o:[n], c_out) where
  if n = 0 then
    o = [];
    c_out = 0
  else				#TODO : correct adder
    (s_n1, c_n1) = adder<n-1>(a[1..], b[1..], c_in);
    (s_n, c_out) = fulladder(a[0], b[0], c_n1);
    o = s_n . s_n1
  end if
end where

subtracter<n>(a:[n], b:[n]) = (o:[n], c_out) where # b - a
  # b-a
  an = not_n<n>(a);
  (o, c) = adder<n>(an, b, 1) ;
  c_out = c and 1
end where
  

